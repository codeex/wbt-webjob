@using WbtWebJob.Models
@{
    ViewData["Title"] = "任务执行日志";
    var customJob = ViewData["CustomJob"] as CustomJob;
    var page = (int)(ViewData["Page"] ?? 1);
    var pageSize = (int)(ViewData["PageSize"] ?? 50);
}

<div class="row mb-4">
    <div class="col">
        <h2>
            <i class="bi bi-file-text"></i> 任务执行日志
        </h2>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index")">定制任务管理</a></li>
                <li class="breadcrumb-item active">@customJob?.Name</li>
            </ol>
        </nav>
    </div>
    <div class="col text-end">
        <a href="@Url.Action("Index")" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> 返回列表
        </a>
        <a href="/hangfire" target="_blank" class="btn btn-primary">
            <i class="bi bi-box-arrow-up-right"></i> 打开Hangfire Dashboard
        </a>
    </div>
</div>

@if (customJob != null)
{
    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">任务信息</h5>
            <div class="row">
                <div class="col-md-3">
                    <strong>任务名称:</strong><br>
                    @customJob.Name
                </div>
                <div class="col-md-3">
                    <strong>任务类型:</strong><br>
                    <code>@customJob.JobType</code>
                </div>
                <div class="col-md-3">
                    <strong>HTTP方法:</strong><br>
                    <span class="badge bg-info">@customJob.HttpMethod</span>
                </div>
                <div class="col-md-3">
                    <strong>调度状态:</strong><br>
                    @if (customJob.EnableSchedule && !string.IsNullOrEmpty(customJob.CronExpression))
                    {
                        <span class="badge bg-success" title="@customJob.CronExpression">
                            <i class="bi bi-clock"></i> 已启用 (@customJob.CronExpression)
                        </span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">未启用</span>
                    }
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-md-6">
                    <strong>URL:</strong><br>
                    <small class="text-muted">@customJob.HttpUrl</small>
                </div>
                <div class="col-md-3">
                    <strong>上次执行:</strong><br>
                    <small>@(customJob.LastExecutionTime?.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss") ?? "从未执行")</small>
                </div>
                <div class="col-md-3">
                    <strong>下次执行:</strong><br>
                    <small>@(customJob.NextExecutionTime?.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss") ?? "-")</small>
                </div>
            </div>
        </div>
    </div>
}

<div class="card">
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="card-title mb-0">执行日志</h5>
            <div>
                <button class="btn btn-sm btn-primary" id="btnRefresh">
                    <i class="bi bi-arrow-clockwise"></i> 刷新
                </button>
                <div class="btn-group" role="group">
                    <input type="radio" class="btn-check" name="levelFilter" id="filterAll" value="" checked>
                    <label class="btn btn-sm btn-outline-secondary" for="filterAll">全部</label>

                    <input type="radio" class="btn-check" name="levelFilter" id="filterInfo" value="Info">
                    <label class="btn btn-sm btn-outline-info" for="filterInfo">Info</label>

                    <input type="radio" class="btn-check" name="levelFilter" id="filterWarning" value="Warning">
                    <label class="btn btn-sm btn-outline-warning" for="filterWarning">Warning</label>

                    <input type="radio" class="btn-check" name="levelFilter" id="filterError" value="Error">
                    <label class="btn btn-sm btn-outline-danger" for="filterError">Error</label>
                </div>
            </div>
        </div>

        <div id="logsContainer">
            <div class="text-center py-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">加载中...</span>
                </div>
                <p class="mt-2">加载日志中...</p>
            </div>
        </div>

        <div class="mt-3 text-center">
            <button class="btn btn-secondary" id="btnLoadMore" style="display:none;">
                加载更多
            </button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const customJobId = '@customJob?.CustomJobId';
        let currentPage = 1;
        let currentFilter = '';
        let allLogs = [];

        function loadLogs(append = false) {
            if (!append) {
                currentPage = 1;
                allLogs = [];
                $('#logsContainer').html('<div class="text-center py-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">加载中...</span></div><p class="mt-2">加载日志中...</p></div>');
            }

            $.ajax({
                url: '/CustomJobs/GetJobLogs',
                method: 'GET',
                data: {
                    customJobId: customJobId,
                    page: currentPage,
                    pageSize: 50
                },
                success: function(response) {
                    if (response.success) {
                        if (append) {
                            allLogs = allLogs.concat(response.logs);
                        } else {
                            allLogs = response.logs;
                        }
                        renderLogs();

                        if (response.logs.length >= 50) {
                            $('#btnLoadMore').show();
                        } else {
                            $('#btnLoadMore').hide();
                        }
                    }
                },
                error: function(xhr) {
                    $('#logsContainer').html('<div class="alert alert-danger">加载日志失败: ' + (xhr.responseJSON?.message || '未知错误') + '</div>');
                }
            });
        }

        function renderLogs() {
            const filteredLogs = currentFilter ? allLogs.filter(log => log.level === currentFilter) : allLogs;

            if (filteredLogs.length === 0) {
                $('#logsContainer').html('<div class="text-center py-5 text-muted"><i class="bi bi-inbox" style="font-size: 3rem;"></i><p class="mt-3">暂无日志记录</p></div>');
                return;
            }

            let html = '<div class="table-responsive"><table class="table table-sm table-hover"><thead class="table-light"><tr><th style="width: 150px;">时间</th><th style="width: 120px;">业务ID</th><th style="width: 100px;">步骤</th><th style="width: 80px;">级别</th><th>消息</th><th style="width: 100px;">状态</th><th style="width: 80px;">操作</th></tr></thead><tbody>';

            filteredLogs.forEach(log => {
                const levelClass = {
                    'Info': 'text-info',
                    'Warning': 'text-warning',
                    'Error': 'text-danger',
                    'Debug': 'text-secondary'
                }[log.level] || 'text-secondary';

                const statusClass = {
                    'Completed': 'bg-success',
                    'Failed': 'bg-danger',
                    'Running': 'bg-primary',
                    'Pending': 'bg-secondary'
                }[log.webJob?.status] || 'bg-secondary';

                html += `<tr>
                    <td><small>${log.createdAt}</small></td>
                    <td><small><code>${log.webJob?.businessId || '-'}</code></small></td>
                    <td><small>${log.step}</small></td>
                    <td><span class="badge ${levelClass}">${log.level}</span></td>
                    <td><small>${log.message || '-'}</small></td>
                    <td><span class="badge ${statusClass}">${log.webJob?.status || '-'}</span></td>
                    <td>
                        ${log.details ? `<button class="btn btn-sm btn-link p-0" onclick="showDetails('${log.logId}', ${log.details ? 'true' : 'false'})"><i class="bi bi-eye"></i></button>` : '-'}
                    </td>
                </tr>`;
            });

            html += '</tbody></table></div>';
            $('#logsContainer').html(html);
        }

        window.showDetails = function(logId, hasDetails) {
            const log = allLogs.find(l => l.logId === logId);
            if (!log) return;

            let detailsHtml = `<strong>日志详情</strong><br><br>
                <strong>日志ID:</strong> ${log.logId}<br>
                <strong>任务ID:</strong> ${log.jobId}<br>
                <strong>业务ID:</strong> ${log.webJob?.businessId || '-'}<br>
                <strong>步骤:</strong> ${log.step}<br>
                <strong>级别:</strong> ${log.level}<br>
                <strong>消息:</strong> ${log.message || '-'}<br>
                <strong>时间:</strong> ${log.createdAt}<br><br>`;

            if (log.details) {
                try {
                    const details = JSON.parse(log.details);
                    detailsHtml += `<strong>详细信息:</strong><br><pre style="max-height: 400px; overflow-y: auto;">${JSON.stringify(details, null, 2)}</pre>`;
                } catch (e) {
                    detailsHtml += `<strong>详细信息:</strong><br><pre>${log.details}</pre>`;
                }
            }

            $('#detailsModalBody').html(detailsHtml);
            new bootstrap.Modal(document.getElementById('detailsModal')).show();
        };

        $('#btnRefresh').click(function() {
            loadLogs(false);
        });

        $('#btnLoadMore').click(function() {
            currentPage++;
            loadLogs(true);
        });

        $('input[name="levelFilter"]').change(function() {
            currentFilter = $(this).val();
            renderLogs();
        });

        // 初始加载
        loadLogs();

        // 自动刷新（每30秒）
        setInterval(function() {
            loadLogs(false);
        }, 30000);
    </script>
}

<!-- 详情模态框 -->
<div class="modal fade" id="detailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">日志详情</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="detailsModalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">关闭</button>
            </div>
        </div>
    </div>
</div>
